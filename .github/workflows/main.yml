name: Rust

on:
  push:
    branches: 
      - master
      - develop
    paths-ignore:
      - '**/README.md'
      - '**/.gitignore'
      - '.rusty-hook.toml'
      - 'LICENSE'
  pull_request:
    branches: 
      - master
      - develop
    paths-ignore:
      - '**/README.md'
      - '**/.gitignore'
      - '.rusty-hook.toml'
      - 'LICENSE'

env:
  CARGO_TERM_COLOR: always

jobs:
  lint:
    name: 🔎 Linter
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - run: rustup component add clippy
      - uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features
  
  coverage:
    name: 📝 Coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Run cargo-tarpaulin
        uses: actions-rs/tarpaulin@v0.1
        with:
          args: '-- --test-threads 1'
      - name: Upload to codecov.io
        uses: codecov/codecov-action@v1.0.2
        with:
          token: ${{secrets.CODECOV_TOKEN}}

  unit-test:
    name: ⚙️ Unit tests
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Build
      run: cargo build --verbose
    - name: Run tests
      run: cargo test --verbose
  
  examples-run:
    name: ⚗️ Run examples
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Launch Kuzzle stack
      run: docker compose up -d
    - name: Run examples
      run: >- 
        for example in examples/*.rs;
        do 
          echo "Running $(basename "$example")...";
          cargo run -q --example "$(echo "$example" | cut -d/ -f 2 | cut -d. -f 1)"; 
        done
